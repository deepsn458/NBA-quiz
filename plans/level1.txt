Project Requirements and Project Specifications (What hardware and software will you need to meet the requirements?)
Level 1


/home
Req 1: Is users visit homepage via GET request
        - Nav bar where users can go to home page
        - A button that user can click to play the game
Spec 1: - Nav Bar with Bootstrap.


/start
Req 2: -
        - "Complete as many questions as you can in 60 seconds"
        - "Press start when read"
       - When user clicks start button, redirects to /quiz
Spec 2: 
        - Form element with html, /quiz working with flask

/quiz
Req 2:  - 25 second timer that starts when page is loaded
        -    Question displayed with two options below
        -   when option is clicked: +1 is added to number of right or wrong answers AND new question and options are displayed
        -   Once timer runs out: Automatically redirected to another webpage
Spec 2: 
        - Timer implements with JS
        - Retrieval of questions randomely with Flask and SQL, Questions,options passed to webpage with Flask, HTML
        -- When button clicked:
            - Answer compared with "correct answer" for question (flask and sql)
            - A database with questions in order is made
            - Users answer is added to the database
            -  +1 added to right or wrong column SQL database through Flask
            - New question and options appear on the same page through JS/AJAX
        - Redirected to /results, working with Flask

/results
Req 3:  - Number of correct and incorrect results displayed on a table
        - Options to restart quiz, or see which answers were right and wrong

Spec 3: - Incorrect and Correct answers retrieved from SQL and displayed by flask
        - Routes for /start and /summary working with flask

/summary
Req 4:  - Correct and Wrong Answers displayed on table in order they were answered
        - Button to restart quiz

Spec 4: - Database created for user responses in /quiz is used (retrieved from SQL with Flask)
            - If user answer is marked wrong, row colored red (Logic handled by SQL, implemented on HTML)
        - Routes for /start working with Flask

Plan
1) Learn how to operate VSCode locally and sync using git (DONE!)
2) Set up SSH key to submit project  (Done!)
3) Strengthen HTML, CSS skills (CS50 web) (Done!)
4) Strengthen Python and Flask skills
5) Design the basic structure of the web app using flask, css, html (done)
    app.py should be functional with all the necessary folders and routes (routes functionality can be filled out later) 
6) Learn to implement database with SQLAlchemy (done)
7) Design the quiz database (done)
8) COmplete application structure (Blueprints) (Done)
10) Strengthen JavaScript Skills  (Done)
11) Add the necessary JS elements to enhance webpage (done)
12) Plan and implement the styling of all the webpages (done)
13) Learn the necessary testing methods and test the functionality of the website
14) Deployment! (Done boiiiiii)