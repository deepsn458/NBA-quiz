Level 1 ( only quiz)
Can be implemented without 'login' features
Quiz features

Req 1: When user clicks a start button, the quiz page is loaded and timer is immediately started


Req 2:- Load all the questions into a list of dictionaries
    Organize all questions into a list, in random order
    For each dictionary: Retrieve a question and two options for the question 
        - Total 4 options for the question
        - Option 1: correct option
        - Option 2: 1/3 randomely selected from incorrect option

Req3: Whether the correct option is at button A or Button B should be random
Req 4: When button is clicked:
        - Value compared to correct option
        - if the same:
            - +1 added to "correct answers
        - else
            - +1 added to wrong answers
Req 5: New question should be loaded 
        - The loaded question cannot be the same as any previous question

Specification (With AJAX)
1) When page is loaded, 60 second timer will be activated. (JS)
    - Time will not reset even if page is reloaded
2) request will be sent to receive the questions and options from the database (AJAX)

(PYTHON)
2) Randomely orders all the questions and places them into a temporary list
3) For each question there will be a dictionary with the question, option A, option B, button id  
    a) Select correct option that has same question id as question
        o1 = Options.query.filter_by(question_id= q.id, correct_incorrect=True).first()
    b) Select incorrect option at random, that has same question id as question 
        Efficient version (may not work):
            o2 =  Options.query.filter_by(question_id=q.id, correct_incorrect=false).order_by(func.random()).limit(1)

4) Append the dictionary to a new list 
5) retrieveQuestions() will retrieve the list
6) displayQuestion() Will choose the first dictionary
5) Randomely assign both options to a button
6) button submits option when button is clicked (JS)
7)Retrieve submitted option and question and add them to the Responses table (Python)
    response = Responses(question_id=q.id, option_id=option.id, correct_incorrect=option.correct_incorrect)
    db.session.add(response)
    db.session.commit()
8) When button is pressed, displayQuestion() will choose the next dictionary in the list
9) Repeat steps 2) to 8) until timer runs out
At the end:
9) When timer runs out, a request will be sent to go to the results page
10) Redirect the user to the results page
    redirect("/results"
    )
11) Get the sum of the correct and incorrect answers
    total_correct = Responses.query.filter_by(correct_incorrect=True);
    total_wrong = Responses.query.filter_by(correct_incorrect=False);

12) Clears the responses table
    db.session.query(Responses).delete()
    db.session.commit()



Specification (Without AJAX)

Level 2 (User can view summary of results)

Level 3 (User's statistics are tracked)